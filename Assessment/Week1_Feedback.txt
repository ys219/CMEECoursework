Starting weekly assessment for Yige, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 118.59 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: WEEK1, Assessment, WEEK4, project, WEEK7, WEEK8miniProject, WEEK6, .git, WEEK9HPC, WEEK5, WEEK2, WEEK3

Found the following files in parent directory: .gitignore, README.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~
*.tmp
*.temp
*.docx
*.jpeg
*.RData
*.Rhistory

*.png
**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# **CMEE Repository**

> by Yige Sun   --MRes.CMEE 2019-20

This repository is for my MRes.CMEE course.  Including courseworks, practicals, proposals etc.


![](https://pic2.zhimg.com/737434d0c6b06a6ef29684c754790019_1200x500.jpg)
## **Structure**
All the files were classified by [WEEK] .
Each week contains

[code]:
scripts in .sh, .py .R or other types; 

[data]:
data files that been used or can be used by scripts; 

[sandbox]: are for fun, that's where I play with(or torture) myself.

[results]:where the outputs stored

## **Environment**

ubuntu 18.04.3 

GNU bash, version 4.4.20

R version 3.6.1

ipython3 version 5.5.0


## **Contents**

### [**WEEK1**](https://github.com/ys219/CMEECoursework/tree/master/WEEK1)

Unix basics

Shell Scripts

LaTex

### [**WEEK2**](https://github.com/ys219/CMEECoursework/tree/master/WEEK2)

Python week I

### [**WEEK3**](https://github.com/ys219/CMEECoursework/tree/master/WEEK3)

R week

### [**WEEK4**](https://github.com/ys219/CMEECoursework/tree/master/WEEK4)

Statistics Analysis

### [**WEEK5**](https://github.com/ys219/CMEECoursework/tree/master/WEEK5)

GIS in R

### [**WEEK6**](https://github.com/ys219/CMEECoursework/tree/master/WEEK6)

Genomics applications

### [**WEEK7**](https://github.com/ys219/CMEECoursework/tree/master/WEEK7)

Python week II

### [**WEEK8miniProject**](https://github.com/ys219/CMEECoursework/tree/master/WEEK8miniProject)

Mini Project Heckathon

### [**WEEK9HPC**](https://github.com/ys219/CMEECoursework/tree/master/WEEK9HPC)

Neutral Theory, Coalescence, HPC, fractal

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 9 weekly directories: WEEK1, WEEK2, WEEK3, WEEK4, WEEK5, WEEK6, WEEK7, WEEK8miniProject, WEEK9HPC

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, data, Results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
CMEECoursework WEEK1
==
This directory includes my code and data of exercises and practical in CMEE bootcamp week1

## Contents:

### `01 Unix `
### `02 Shell Script`
### `03 Git`
### `04 LaTex`

### [**code**](https://github.com/ys219/CMEECoursework/tree/master/WEEK1/code)

#### Practicals:

##### `UnixPrac1.txt`


single line solutions for 5 fasta handling tasks, all the command were called from /data

this file also includes the Bash Command chanllenge


##### `csvtosapce.sh`1

A shell script that can convert comma seperated values to space seperated values, and save the output as an .txt file

a loop were written in the script, therefore is it able to handle multiple csv files at once.

##### `CompileLaTeX.sh`1

this script can compile LaTex by bash with FirstExemple.tex and output a pdf file

##### `FirstExemple.tex`1

this includes all the index and contents for the pdf file, it can yield a pdf output by bash CompileLaTex.sh

#### Exercises:

##### `boilerplate.sh`1

print out a sentence, also -e enabled the interpretation of back slash, which enabled the new line characters in this case

##### `ConcatenateTwoFile.sh`1

add two files to a new file and print out the merged new file

##### `CountLines.sh`1

count and print the number of lines in a file

##### `forlooptrail.sh`1

this script is showing how for loop works with bash

##### `Readsum.sh`1

add up two input numbers, and print the out put

##### `Showvar.sh`1

print the current input varible

##### `tabtocsv.sh`1

convert tab seperated values to comma seperated values and export as a .csv file

##### `tiff2png.sh`1

convert .tiff file to .png file

**********************************************************************

Found following files in results directory: ...

Found 13 code files: .txt, CountLines.sh, variables.sh, ConcatenateTwoFile.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, MyExempleScript.sh, boilerplate.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file .txt...

File contents are:
**********************************************************************
**********************************************************************

Testing .txt...

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author: Y_Sun_ys219@ic.ac.uk
# Script: CountLines.sh
# Desc: count the number of lines of input file
# Arguments: 1
# Input: CountLines.sh <inputfile>
# Output: number of line shown on terminals
# Date: Oct 2019

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 11: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author: Y_Sun_ys219@ic.ac.uk
# Script: variables.sh
# Desc: examples of assign values to variables
# Arguments: 0
# Date: Oct 2019

# Shows the use of variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar

## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error

======================================================================
Inspecting script file ConcatenateTwoFile.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author: Y_Sun_ys219@ic.ac.uk
# Script: ConcatenateTwoFile.sh
# Desc: merge two files into one file
# Arguments: 1
# Input: ConcatenateTwoFile.sh <file1><file2><outputfile>
# Output: save the <outputfile> and print the output file contents
# Date: Oct 2019
cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3
##adding two input file to a new file and print the new file**********************************************************************

Testing ConcatenateTwoFile.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error (or warning):
ConcatenateTwoFile.sh: line 10: $3: ambiguous redirect
ConcatenateTwoFile.sh: line 11: $3: ambiguous redirect

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Y_Sun_ys219@ic.ac.uk
# Script: CompileLaTeX.sh
# Desc: compile Latex file
# Arguments: 1
# Input: CompileLaTeX.sh <FirstExample.tex>
# Output: <FirstExample.pdf> in data directory
# Date: Oct 2019

if [-z $1]
    then
    echo "NO INPUT FILE, THE END"
    exit
fi

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
mv $1.pdf ../data
evince ../data/$1.pdf &

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.fls
rm *.blg

exit**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error (or warning):
CompileLaTeX.sh: line 10: [-z: command not found
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
mv: cannot stat '.pdf': No such file or directory
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.fls': No such file or directory
rm: cannot remove '*.blg': No such file or directory

** (evince:12406): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2019-20/Coursework/StudentRepos/YigeSun_YS219/WEEK1/data/.pdf': No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

** (evince:12406): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author: Y_Sun_ys219@ic.ac.uk
# Script: tiff2sh.sh
# Desc: convert tiff to png file
# Arguments: 1
# Input: tiff2png.sh <tif file>
# Output: 
# Date: Oct 2019

for f in *.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).png"; 
    done
    **********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.png' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: ys219@imperial.ac.uk
# Script: csvtospace.sh
# Description: substitute the comma in the files with a space
# Saves the output into a *.txt file
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

# Notice: if failed to bash it, try
# bash csvtospace.sh "../data/18*.csv"

echo $1
for file in $1;
    do
        echo -e "Creating a space delimited version of $file ...";
        cat $file | tr -s "," " " >> ../data/$file.txt;
        echo "Done!";
    done**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************


**********************************************************************

Code ran without errors

Time consumed = 0.00271s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document with Mass Energy equivalence}

\author{Yige Sun}

\date{4 oct 2019}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper must be cool!
    It contains Mass Energy equivalence
  \end{abstract}
  
  \section{Introduction}
    Blah Blah!
  
  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}.
  
  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}

**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Annalen der Physik},
  volume={18},
  number={13},
  pages={639--41},
  year={1905}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#0 bash command challenge:

find . -type f -exec ls -s {} \; | sort -n | head -10

Search regular files in the directory and list out every single file, then sort them by nermeric values and output the first 10 lines of the list

#############################################################################################

#1  count lines:

wc -l ../data/*.fasta

      28 ../data/407228326.fasta
    127 ../data/407228412.fasta
  78104 ../data/E.coli.fasta
 156362 total

wc -l allows me count the newlines and print it, using *.fasta to select all the fasta files
############################################################################################

#2 print from the second line:

tail --lines=+2 ../data/E.coli.fasta | more

<out put is too long not able to put here>

tail can output the last part of the file and using --lines to start from sepcific lines
I also put a | more as the sequence is to long, this allows me check the page by page and confirm if it's been printed from second line or not
#############################################################################################

#3 count sequence length:

grep -v ">" ../data/E.coli.fasta |tr -d "\n"|wc -c 

4686137

grep -v which is the invert matches can get rid of that first line that start with ">", and using tr-d to delete the newline characters finally count the bytes
#############################################################################################

#4  match ATGC and count them:

grep -v ">" ../data/E.coli.fasta |tr -d "\n"|grep -o "ATGC" |wc -l

21968
this is also start with removing the firs lines and new line characters then grep -o to match the target them count with wc -l
##############################################################################################

#5 compute AT/GC ratio:

echo $(grep -v ">" ../data/E.coli.fasta | grep -o ["A""T"] | wc -l) / $(grep -v ">" ../data/E.coli.fasta | grep -o ["G""C"] |wc -l)|bc -l 

.96922822848944879586

Here i used square bracket to grep two character as onece and use bc -l to work out the ratio
#############################################################################################
[END]
**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Y_Sun_ys219@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas and Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Input: tabtocsv.sh <txt file with tabs>
# Output: save the output file into a .csv
# Date: Oct 2019

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00717s

======================================================================
Inspecting script file MyExempleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author: Y_Sun_ys219@ic.ac.uk
# Script: MyExampleScript.sh
# Desc: print a greeting line in two ways
# Arguments: 0
# Input: MyExampleScript.sh
# Output: two lines of greeting messages with user name
# Date: Oct 2019

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo
**********************************************************************

Testing MyExempleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00672s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
###first line is the shebang, 
# Author: Y_Sun_ys219@ic.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2019

echo -e "\nThis is a shell script!\n"
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script!


**********************************************************************

Code ran without errors

Time consumed = 0.00495s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!